/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrandomrants_plus"] = self["webpackChunkrandomrants_plus"] || []).push([["shared"],{

/***/ "./src/accounthelper/index.js":
/*!************************************!*\
  !*** ./src/accounthelper/index.js ***!
  \************************************/
/***/ ((module) => {

eval("var lastValidationState = null;\nvar cookieManager = {\n  getAccountCookie() {\n    return this.getCookie(\"account\");\n  },\n  signoutAccountCookie() {\n    return this.setCookie(\"account\", \"\");\n  },\n  setCookie(name, value, days) {\n    var expires = \"\";\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n  },\n  getCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(\";\");\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == \" \") c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  },\n};\n\nfunction getServerURL() {\n  return new URL(window.location.href).origin;\n}\n\nasync function checkSessionCookie() {\n  var session = cookieManager.getAccountCookie();\n  if (session) {\n    //Double check this is valid before we just allow it to pass through.\n    //If the process fails in this time, we set the cookie to nothing to sign out.\n    try {\n      var request = await fetch(getServerURL() + \"/account/session\", {\n        method: \"GET\",\n      });\n      var json = await request.json();\n      if (json.valid) {\n        lastValidationState = json;\n        return json;\n      }\n      cookieManager.signoutAccountCookie(\"account\");\n      lastValidationState = null;\n      return false;\n    } catch (e) {\n      //Seems like the checking process has failed, so return false.\n      cookieManager.signoutAccountCookie(\"account\");\n      lastValidationState = null;\n      return false;\n    }\n  } else {\n    lastValidationState = null;\n    return false; //We are not logged in, so this is an instant false.\n  }\n}\n\nasync function loginToAccount(username, password) {\n  var sendJSON = {\n    username: username,\n    password: password,\n  };\n  var request = await fetch(getServerURL() + \"/account/login\", {\n    method: \"POST\",\n    body: JSON.stringify(sendJSON),\n  });\n  var json = await request.json();\n  if (!json.valid) {\n    throw new Error(json.message);\n  }\n}\n\nasync function signupAccount(username, password) {\n  var sendJSON = {\n    username: username,\n    password: password,\n  };\n  var request = await fetch(getServerURL() + \"/account/signup\", {\n    method: \"POST\",\n    body: JSON.stringify(sendJSON),\n  });\n  var json = await request.json();\n  if (!json.valid) {\n    throw new Error(json.message);\n  }\n}\n\nasync function logoutOfAccount() {\n  cookieManager.signoutAccountCookie();\n}\n\nfunction getProfilePictureURL(username) {\n  return getServerURL() + \"/account/picture/\" + username;\n}\n\nfunction loginToAdmin() {\n  var pr = window.prompt(\"Admin key:\");\n  cookieManager.setCookie(\"admin\", pr);\n}\n\nfunction openLink(href, newTab) {\n  var a = document.createElement(\"a\");\n  a.href = href;\n  if (newTab) {\n    a.target = \"_blank\";\n  }\n  a.click();\n}\n\nasync function hasNewMail() {\n  try{\n    var a = await fetch(window.getServerURL() + \"/account/mail\");\n    if (a.ok) {\n      var json = await a.json();\n      if (json.mail) {\n        for (var message of json.mail) {\n          if (message.new) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n    return false;\n  }catch(e){\n    return false;\n  }\n}\nfunction getCurrentValidationState () {\n  return lastValidationState;\n}\n\nmodule.exports = {\n  cookieManager,\n  getServerURL,\n  checkSessionCookie,\n  loginToAccount,\n  signupAccount,\n  logoutOfAccount,\n  getProfilePictureURL,\n  loginToAdmin,\n  openLink,\n  hasNewMail,\n  getCurrentValidationState\n};\n\n//# sourceURL=webpack://randomrants-plus/./src/accounthelper/index.js?");

/***/ }),

/***/ "./src/dialogs.js":
/*!************************!*\
  !*** ./src/dialogs.js ***!
  \************************/
/***/ ((module) => {

eval("var dialog = {\n  styles: {\n    //Container (Holds both background and dialog box)\n    containerClassName: \"windowDialogContainer\",\n    //Background\n    backgroundClassName: \"windowDialogBackground\",\n    //Dialog\n    dialogClassName: \"windowDialogBox\",\n    //Button\n    buttonClassName: \"windowDialogButton\",\n    //Header\n    headerClassName: \"windowDialogHeader\",\n    //Input (Where you type text)\n    inputClassName: \"windowDialogInput\",\n  },\n  texts: {\n    ok: \"OK\",\n    cancel: \"Cancel\",\n  },\n  _createDialogBase() {\n    var background = document.createElement(\"div\");\n    background.style.position = \"fixed\";\n    background.style.top = \"0\";\n    background.style.left = \"0\";\n    background.style.width = \"100vw\";\n    background.style.height = \"100vh\";\n    background.style.opacity = \"0.5\";\n    background.className = this.styles.backgroundClassName;\n\n    var dialogBox = document.createElement(\"div\");\n    dialogBox.style.position = \"fixed\";\n    dialogBox.style.top = \"50%\";\n    dialogBox.style.left = \"50%\";\n    dialogBox.style.transform = \"translate(-50%, -50%)\";\n    dialogBox.style.width = \"fit-content\";\n    dialogBox.style.height = \"fit-content\";\n    dialogBox.style.padding = \"20px\";\n    dialogBox.style.maxWidth = \"500px\";\n    dialogBox.style.maxHeight = \"300px\";\n    dialogBox.style.minWidth = \"100px\";\n    dialogBox.style.minHeight = \"100px\";\n    dialogBox.style.overflow = \"auto\";\n    dialogBox.className = this.styles.dialogClassName;\n\n    var dialogContainer = document.createElement(\"div\");\n    dialogContainer.style.zIndex = \"100\";\n    dialogContainer.className = this.styles.containerClassName;\n    dialogContainer.append(background);\n    dialogContainer.append(dialogBox);\n\n    return { background, dialogBox, dialogContainer };\n  },\n  _createButtonBase() {\n    var button = document.createElement(\"div\");\n    button.className = this.styles.buttonClassName;\n    button.style.width = \"fit-content\";\n    button.style.height = \"fit-content\";\n    button.style.minWidth = \"30px\";\n    button.style.minHeight = \"20px\";\n    button.style.padding = \"3px\";\n    button.style.cursor = \"pointer\";\n    button.style.display = \"inline-block\";\n\n    return button;\n  },\n  _createHeaderBase() {\n    var span = document.createElement(\"span\");\n    span.className = this.styles.headerClassName;\n\n    return span;\n  },\n  _createColorInputBase() {\n    var input = document.createElement(\"input\");\n    input.type = \"color\";\n\n    return input;\n  },\n  _createBreakBase() {\n    var br = document.createElement(\"br\");\n    return br;\n  },\n  _createTextInputBase() {\n    var input = document.createElement(\"input\");\n    input.type = \"text\";\n    input.className = this.styles.inputClassName;\n\n    return input;\n  },\n  _appendHeaders(message, dialogBox) {\n    var m = message.toString();\n    for (var m of m.split(\"\\n\")) {\n      var header = this._createHeaderBase();\n      header.textContent = m;\n      dialogBox.append(header);\n      dialogBox.append(this._createBreakBase());\n    }\n  },\n  displayButtonChooser: function (message, buttonTexts) {\n    var { dialogBox, background, dialogContainer } = this._createDialogBase();\n\n    dialogBox.focus();\n\n    this._appendHeaders(message, dialogBox);\n\n    document.body.append(dialogContainer);\n\n    return new Promise((accept) => {\n      buttonTexts.forEach((buttonText, index) => {\n        var button = this._createButtonBase();\n        button.textContent = buttonText;\n        button.onclick = function () {\n          dialogContainer.remove();\n          accept(index);\n        };\n        dialogBox.append(button);\n      });\n    });\n  },\n  alert: function (message) {\n    var { dialogBox, background, dialogContainer } = this._createDialogBase();\n\n    dialogBox.focus();\n\n    document.body.append(dialogContainer);\n\n    this._appendHeaders(message, dialogBox);\n\n    var acceptButton = this._createButtonBase();\n    acceptButton.textContent = this.texts.ok;\n    dialogBox.append(acceptButton);\n\n    return new Promise((accept) => {\n      acceptButton.onclick = function () {\n        accept();\n        dialogContainer.remove();\n      };\n    });\n  },\n  prompt: function (message) {\n    var { dialogBox, background, dialogContainer } = this._createDialogBase();\n\n    dialogBox.focus();\n\n    document.body.append(dialogContainer);\n\n    this._appendHeaders(message, dialogBox);\n\n    var input = this._createTextInputBase();\n    dialogBox.append(input);\n\n    dialogBox.append(this._createBreakBase());\n\n    var acceptButton = this._createButtonBase();\n    acceptButton.textContent = this.texts.ok;\n    dialogBox.append(acceptButton);\n\n    var cancelButton = this._createButtonBase();\n    cancelButton.textContent = this.texts.cancel;\n    dialogBox.append(cancelButton);\n\n    return new Promise((accept) => {\n      acceptButton.onclick = function () {\n        if (input.value.length < 1) {\n          accept(undefined);\n        } else {\n          accept(input.value);\n        }\n        dialogContainer.remove();\n      };\n      cancelButton.onclick = function () {\n        accept();\n        dialogContainer.remove();\n      };\n    });\n  },\n  confirm: function (message) {\n    var { dialogBox, background, dialogContainer } = this._createDialogBase();\n\n    dialogBox.focus();\n\n    document.body.append(dialogContainer);\n\n    this._appendHeaders(message, dialogBox);\n\n    var acceptButton = this._createButtonBase();\n    acceptButton.textContent = this.texts.ok;\n    dialogBox.append(acceptButton);\n\n    var cancelButton = this._createButtonBase();\n    cancelButton.textContent = this.texts.cancel;\n    dialogBox.append(cancelButton);\n\n    return new Promise((accept) => {\n      acceptButton.onclick = function () {\n        accept(true);\n        dialogContainer.remove();\n      };\n      cancelButton.onclick = function () {\n        accept(false);\n        dialogContainer.remove();\n      };\n    });\n  },\n  colorPrompt: function (message) {\n    var { dialogBox, background, dialogContainer } = this._createDialogBase();\n\n    dialogBox.focus();\n\n    document.body.append(dialogContainer);\n\n    this._appendHeaders(message, dialogBox);\n\n    var colorInput = this._createColorInputBase();\n    dialogBox.append(colorInput);\n\n    dialogBox.append(this._createBreakBase());\n\n    var acceptButton = this._createButtonBase();\n    acceptButton.textContent = this.texts.ok;\n    dialogBox.append(acceptButton);\n\n    var cancelButton = this._createButtonBase();\n    cancelButton.textContent = this.texts.cancel;\n    dialogBox.append(cancelButton);\n\n    return new Promise((accept) => {\n      acceptButton.onclick = function () {\n        accept(colorInput.value);\n        dialogContainer.remove();\n      };\n      cancelButton.onclick = function () {\n        accept();\n        dialogContainer.remove();\n      };\n    });\n  },\n};\n\nmodule.exports = dialog;\n\n\n//# sourceURL=webpack://randomrants-plus/./src/dialogs.js?");

/***/ }),

/***/ "./src/gp2/elements.js":
/*!*****************************!*\
  !*** ./src/gp2/elements.js ***!
  \*****************************/
/***/ ((module) => {

eval("//Webpack compatible version of elements module from gvbvdxx-pack-2\n//With some new updates as well.\nvar __GP_elements = {};\nvar elements = {\n  appendElements: function (elm, appendArray) {\n    for (var appendElm of appendArray) {\n      elm.append(appendElm);\n    }\n  },\n  createElementsFromJSON: function (jsonelmArray) {\n    //converts an array of json's with element properties to a element list.\n    function runElements(arry) {\n      var myRealElms = [];\n      for (var elm of arry) {\n        var realElm = document.createElement(elm.element);\n        for (var attriName of Object.keys(elm)) {\n          if (!(attriName == \"element\" || attriName == \"children\")) {\n            var attributeValue = elm[attriName];\n            var setattri = true;\n            if (attriName == \"gid\") {\n              __GP_elements[attributeValue] = realElm;\n              setattri = false;\n            }\n            if (attriName == \"style\") {\n              for (var styleName of Object.keys(attributeValue)) {\n                var styleValue = attributeValue[styleName];\n                realElm.style[styleName] = styleValue;\n              }\n              setattri = false;\n            }\n            if (attriName == \"innerHTML\") {\n              realElm.innerHTML = attributeValue;\n              setattri = false;\n            }\n            if (attriName == \"textContent\") {\n              realElm.textContent = attributeValue;\n              setattri = false;\n            }\n            if (attriName == \"src\") {\n              realElm.src = attributeValue;\n              setattri = false;\n            }\n            if (attriName == \"value\") {\n              realElm.value = attributeValue;\n              setattri = false;\n            }\n            if (attriName == \"min\") {\n              realElm.min = attributeValue;\n              setattri = false;\n            }\n            if (attriName == \"max\") {\n              realElm.max = attributeValue;\n              setattri = false;\n            }\n            if (attriName == \"width\") {\n              realElm.width = attributeValue;\n              setattri = false;\n            }\n            if (attriName == \"height\") {\n              realElm.height = attributeValue;\n              setattri = false;\n            }\n            if (attriName == \"className\") {\n              realElm.className = attributeValue;\n              setattri = false;\n            }\n            if (attriName == \"hidden\") {\n              if (attributeValue) {\n                realElm.hidden = true;\n              }\n              setattri = false;\n            }\n            if (setattri) {\n              realElm.setAttribute(attriName, attributeValue);\n            }\n          }\n        }\n\n        if (elm.children) {\n          var elmsToAppend = runElements(elm.children);\n          for (var elmAppend of elmsToAppend) {\n            realElm.append(elmAppend);\n          }\n        }\n        myRealElms.push(realElm);\n      }\n      return myRealElms;\n    }\n    return runElements(jsonelmArray);\n  },\n  getById: function (id) {\n    return document.getElementById(id);\n  },\n  setGPId: function (el, id) {\n    __GP_elements[id] = el;\n    return el;\n  },\n  getGPId: function (id) {\n    if (__GP_elements[id]) {\n      return __GP_elements[id];\n    }\n    return null;\n  },\n  body: document.body,\n  __GP_elements: __GP_elements,\n};\nmodule.exports = elements;\n\n\n//# sourceURL=webpack://randomrants-plus/./src/gp2/elements.js?");

/***/ }),

/***/ "./src/menu.js":
/*!*********************!*\
  !*** ./src/menu.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var elements = __webpack_require__(/*! ./gp2/elements.js */ \"./src/gp2/elements.js\");\n\nvar elementJSON = [\n  {\n    element: \"div\",\n    className: \"menuBar\",\n    gid:\"menu_bar\",\n    children: [\n      {\n        element: \"img\",\n        src: \"images/page-logo.svg\"\n      },\n      //Home button\n      {\n        element: \"div\",\n        className: \"menuBarItem\",\n        textContent: \"Random Rants +\",\n        gid: \"menu_homeButton\"\n      },\n      //Spacing between home button.\n      {\n        element:\"div\",\n        style: {\n          width: \"15px\"\n        }\n      },\n      //Chat button.\n      {\n        element: \"div\",\n        className: \"menuBarItem\",\n        textContent: \"Chat\",\n        gid: \"menu_chatButton\"\n      },\n    ],\n  },\n  { //Since using position:fixed removes spacing, manually just add it by using a invisible div element.\n    element: \"div\",\n    style: {\n      width: \"100%\",\n      height: \"40px\"\n    }\n  }\n];\n\nelements.appendElements(\n  elements.body,\n  elements.createElementsFromJSON(elementJSON)\n);\n\n__webpack_require__(/*! ./user-menu.js */ \"./src/user-menu.js\");\n\n\nvar homeMenuButton = elements.getGPId(\"menu_homeButton\");\n\nhomeMenuButton.addEventListener(\"click\", () => {\n  window.location.href = \"/\";\n});\n\nvar chatMenuButton = elements.getGPId(\"menu_chatButton\");\n\nchatMenuButton.addEventListener(\"click\", () => {\n  window.location.href = \"/chat\";\n});\n\n//# sourceURL=webpack://randomrants-plus/./src/menu.js?");

/***/ }),

/***/ "./src/user-menu.js":
/*!**************************!*\
  !*** ./src/user-menu.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var elements = __webpack_require__(/*! ./gp2/elements.js */ \"./src/gp2/elements.js\");\nvar accountHelper = __webpack_require__(/*! ./accounthelper/index.js */ \"./src/accounthelper/index.js\");\n\nvar elementJSON = [\n  {\n    element: \"div\",\n    className: \"userMenuBar\",\n    gid: \"userMenuBar\",\n    children: [],\n  },\n];\n\nelements.appendElements(\n  elements.getGPId(\"menu_bar\"),\n  elements.createElementsFromJSON(elementJSON)\n);\n\nvar signInButton = {\n  element: \"div\",\n  className: \"menuBarItem\",\n  textContent: \"Sign in\",\n  gid: \"menu_signIn\"\n};\nvar signUpButton = {\n  element: \"div\",\n  className: \"menuBarItem\",\n  textContent: \"Sign up\",\n  gid: \"menu_signUp\"\n};\n\n\nvar myAccountButton = {\n  element: \"div\",\n  className: \"menuBarItem\",\n  gid: \"menu_myAccount\"\n};\n\nfunction handleSignedOutAccountButtons () {\n  var signInButton = elements.getGPId(\"menu_signIn\");\n\n  signInButton.addEventListener(\"click\", () => {\n    window.location.href = \"/signin\";\n  });\n  \n  var signUpButton = elements.getGPId(\"menu_signUp\");\n\n  signUpButton.addEventListener(\"click\", () => {\n    window.location.href = \"/signup\";\n  });\n}\n\nfunction handleUserAccountButtons () {\n  var myAccountButton = elements.getGPId(\"menu_myAccount\");\n\n  myAccountButton.addEventListener(\"click\", () => {\n    window.location.href = \"/myaccount\";\n  });\n}\n\n(async function () {\n  var validated = await accountHelper.checkSessionCookie();\n  if (validated) {\n    myAccountButton.textContent = validated.username;\n    elements.appendElements(\n      elements.getGPId(\"menu_bar\"),\n      elements.createElementsFromJSON([myAccountButton])\n    );\n    handleUserAccountButtons();\n  } else {\n    elements.appendElements(\n      elements.getGPId(\"menu_bar\"),\n      elements.createElementsFromJSON([signInButton,signUpButton])\n    );\n    handleSignedOutAccountButtons();\n  }\n})();\n\n\n//# sourceURL=webpack://randomrants-plus/./src/user-menu.js?");

/***/ })

}]);